version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
  

jobs:
  build_and_push_caris_caller_image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: ./carisbatch/Dockerfile
          path: ./carisbatch/
          region: AWS_REGION_ENV_VAR_NAME
          repo: callcarisbatch
          tag: 'caris_caller_image-latest' 
  build_and_push_startstopec2_image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: ./startstopec2/Dockerfile
          path: ./startstopec2/
          region: AWS_REGION_ENV_VAR_NAME
          repo: callcarisbatch
          tag: 'startstopec2_image-latest'
  build_and_push_geoserver_with_s3_image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: Install Git
          command: sudo apt-get install git
      - run:
          name: Download kartoza/geoserver
          command: git clone git://github.com/kartoza/docker-geoserver
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: Dockerfile ####
          path: ./docker-geoserver ####
          extra-build-args: 'COMMUNITY_MODULES=true'
          region: AWS_REGION_ENV_VAR_NAME
          repo: callcarisbatch
          tag: 'geoserver-latest'        
  deploy:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: check s3
          command: aws sts get-caller-identity
      - checkout
      - run:
          name: Install terraform
          command: wget https://releases.hashicorp.com/terraform/0.12.17/terraform_0.12.17_linux_amd64.zip && unzip terraform_0.12.17_linux_amd64.zip && chmod +x terraform && sudo mv terraform /usr/bin/
      - run:
          name: terraform init
          working_directory: ./infra
          command: pwd && echo $CIRCLE_WORKING_DIRECTORY && terraform init
      - run:
          name: terraform plan
          working_directory: ./infra
          command: terraform plan -var="ausseabed-processing-pipeline-name=ausseabed-processing-pipeline-csiro"
      - run:
          name: terraform apply 
          working_directory: ./infra
          command: terraform apply -var="ausseabed-processing-pipeline-name=ausseabed-processing-pipeline-csiro" --auto-approve
      
    

workflows:
  update_infra_and_application:
    jobs:
      - build_and_push_caris_caller_image
      - build_and_push_startstopec2_image
      - build_and_push_geoserver_with_s3_image
      - deploy:
          requires:
            - build_and_push_caris_caller_image
            - build_and_push_startstopec2_image
  